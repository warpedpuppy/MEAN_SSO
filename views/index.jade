extends layout

block content

  .container
    .row
      ui-view


  script(type="text/ng-template" id="/enable_account.html")
    .page-header
      div(class="alert alert-success row")
        p Congrats,your account has been enabled!
        p Welcome, {{ info.username | capitalize}}!

  script(type="text/ng-template" id="/admin.html")


    .row.text-center
        ul.pagination
          li(ng-class="{active: active_tab == 1}")
            a(ng-click="active_tab = 1") add group member
          li(ng-class="{active: active_tab == 2}")
            a(ng-click="active_tab = 2") change password
          li(ng-class="{active: active_tab == 3}")
            a(ng-click="active_tab = 3") change email address
          li(ng-class="{active: active_tab == 4}")
            a(ng-click="active_tab = 4") delete/edit group members

    .row.form-width
      div(ng-show='error' class='alert alert-warning row') {{warning}}
      div(ng-show='show_success' class='alert alert-success row') {{success}}


    .row.form-width
      form(ng-submit="addGroupMember()", name="add_group_member", ng-show="active_tab == 1")
        h3 add a group member
          //,ng-pattern="/^[a-zA-Z0-9]*$/",ng-minlength="3",ng-maxlength='20',
        .form-group
          input(id='membername', type="text",class="form-control",name="membername",placeholder="member name", ng-model="new_member_name" membername required)/

        .form-group
          div(ng-if="add_group_member.$pending.membernameExists") checking....
          div(ng-if="add_group_member.$error.membernameExists") membername exists already

          p(class='mini-form' ng-class="add_group_member.membername.$valid === false?'orange':'green'") format valid? =
            code(ng-class="add_group_member.membername.$valid === false?'orange':'green'") {{add_group_member.membername.$valid}}

        .form-group
          input(id='member_email', type="email",class="form-control",name="member_email",placeholder="new member's email",ng-model="new_member_email" new_member_email required)/

        .form-group
          p(class='mini-form' ng-class="add_group_member.member_email.$valid === false?'orange':'green'") format valid? =
            code(ng-class="add_group_member.member_email.$valid === false?'orange':'green'") {{add_group_member.member_email.$valid}}

        .form-group
          button(type="submit" class="btn btn-primary",ng-disabled="add_group_member.$invalid") add member







    .row.form-width
      form(ng-submit="changePassword()", name="change_password", ng-show="active_tab == 2")
        h3 change your password

        .form-group
          input(id='password_input_1', type="password",class="form-control",name="password1",placeholder="New Password",ng-model="new_password_1",ng-pattern="/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])/",ng-minlength="6",ng-maxlength='20' password1 required)/

        .form-group
          p(class='mini-form' ng-class="change_password.password1.$valid === false?'orange':'green'") format valid? =
            code(ng-class="change_password.password1.$valid === false?'orange':'green'") {{change_password.password1.$valid}}

        .form-group
          input(id='password_input_2', type="password",class="form-control",name="password2",placeholder="Re-type new password",ng-model="new_password_2",ng-pattern="/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])/",ng-minlength="6",ng-maxlength='20' password2 required)/

        .form-group
          p(class='mini-form' ng-class="change_password.password2.$valid === false?'orange':'green'") format valid? =
            code(ng-class="change_password.password2.$valid === false?'orange':'green'") {{change_password.password2.$valid}}

          p(class='mini-form orange',id='password_length_check') passwords must be >= 6 chars & <=20
          p(class='mini-form orange',id='password_uppercase_check') passwords must have at least one uppercase
          p(class='mini-form orange',id='password_lowercase_check') passwords must have at least one lowercase
          p(class='mini-form orange',id='password_number_check') passwords must have at least one number

            //.row.form-width
              form(ng-submit="addGroupMember()", name="add_group_member", ng-show="active_tab == 1")
        .form-group
          button(type="submit" class="btn btn-primary",ng-disabled="change_password.$invalid") change password


    .row.form-width
      form(ng-submit="changeEmail()", name="change_email", ng-show="active_tab == 3")
        h3 change your email address

        .form-group
          input(id='email_input_1', type="email",class="form-control",name="email1",ng-model="new_email_1",placeholder="New Email" required)/

        .form-group
          p(class='mini-form' ng-class="change_email.email1.$valid === false?'orange':'green'") format valid? =
            code(ng-class="change_email.email1.$valid === false?'orange':'green'") {{change_email.email1.$valid}}

        .form-group
          input(id='email_input_2', type="email",class="form-control",name="email2",placeholder="Re-type new email",ng-model="new_email_2" required)/

        .form-group
          p(class='mini-form' ng-class="change_email.email2.$valid === false?'orange':'green'") format valid? =
            code(ng-class="change_email.email2.$valid === false?'orange':'green'") {{change_email.email2.$valid}}

        .form-group
          button(type="submit" class="btn btn-primary",ng-disabled="change_email.$invalid") change email


    .row.form-width
      form(ng-submit="deleteEditMembers()", name="delete_edit_members", ng-show="active_tab == 4")
          table.table.table-striped
            thead
              tr
                th name
                th email
                th edit
                th delete
            tbody
              tr(ng-repeat='member in members')
                td {{member.membername}}
                td {{member.email}}
                td
                  button(class="btn btn-info") edit
                td
                  button(class="btn btn-danger", ng-click='deleteMember(member._id, $index)',  ng-show='isVisible(member)') confirm deletion

                  button(ng-click='toggleVisibility(member)', class='btn btn-success', ng-show='isVisible(member)') cancel deletion

                  button(ng-click='toggleVisibility(member)', class='btn btn-primary', ng-hide='isVisible(member)') delete this record





  script(type="text/ng-template" id="/reset_password.html")
    .page-header

      div(ng-show="show_warning" class="alert alert-warning row")
        span {{ warning }}

      div(ng-show="show_success" class="alert alert-success row")
        span {{ success }}

      form(ng-submit="resetPassword()", name="reset_password")
        h3 reset your password
        .form-group
          input(id='password_input_1', type="password",class="form-control",name="password1",placeholder="New Password",ng-model="new_password_1",ng-pattern="/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])/",ng-minlength="6",ng-maxlength='20' password1 required)/

        .form-group
          p(class='mini-form' ng-class="reset_password.password1.$valid === false?'orange':'green'") input valid? =
            code(ng-class="reset_password.password1.$valid === false?'orange':'green'") {{reset_password.password1.$valid}}

          input(type='hidden', ng-model='username')/
          input(type='hidden', ng-model='reset_key')/

        .form-group
          input(id='password_input_2', type="password",class="form-control",name="password2",placeholder="Re-type new password",ng-model="new_password_2",ng-pattern="/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])/",ng-minlength="6",ng-maxlength='20' password2 required)/

        .form-group

          p(class='mini-form' ng-class="reset_password.password2.$valid === false?'orange':'green'") input valid? =
            code(ng-class="reset_password.password2.$valid === false?'orange':'green'") {{reset_password.password2.$valid}}
          p(class='mini-form orange',id='password_length_check') passwords must be >= 6 chars & <=20
          p(class='mini-form orange',id='password_uppercase_check') passwords must have at least one uppercase
          p(class='mini-form orange',id='password_lowercase_check') passwords must have at least one lowercase
          p(class='mini-form orange',id='password_number_check') passwords must have at least one number


        .form-group
              button(type="submit" class="btn btn-primary",ng-disabled="reset_password.$invalid") reset password





  script(type="text/ng-template" id="/forgot_password.html")
    .page-header

      div(ng-show="error" class="alert alert-warning row")
        span {{ error_message }}

      div(ng-show="!show_forgot_password_form" class="alert alert-success row")
        span {{ success }}

      form(ng-submit="sendRestPasswordLink()", name="send_reset_password_link", ng-show="show_forgot_password_form")
        h3 forgot password --- enter your username
        .form-group
          input(id='username_input',ng-minlength="3",ng-maxlength='20',type="text",class="form-control",placeholder="Username", name='username_fp',ng-model="username_fp" username_fp required)/

        .form-group
          button(type="submit" class="btn btn-primary",ng-disabled="send_reset_password_link.$invalid") send reset password




  script(type="text/ng-template" id="/expired.html")
    .page-header
      h1 EXPIRED

  script(type="text/ng-template" id="/members.html")
    .page-header
        h1 members:
        table(class='table table-striped')
          thead
            tr
              th name
              th email address
          tbody
            tr(ng-repeat='member in members')
              td {{member.username}}
              td {{member.email}}








  script(type="text/ng-template" id="/pending.html")
    .page-header
      div(class="alert alert-info row") Please go to your mail and click the link to complete the registration process!




  script(type="text/ng-template" id="/home.html")
    .page-header

        h1(ng-show="isLoggedIn()") Welcome home, {{ currentUser() | capitalize }}!
        h1(ng-hide="isLoggedIn()") you are not logged in.





  script(type="text/ng-template" id="/register.html")

    .form-width
      div(ng-show="error" class="alert alert-danger row")
          span {{ expired_notice }}

      div(ng-show="show_error" class="alert alert-danger row")
        span {{ error_message }}


      form(ng-submit="register(user)",style="margin-top:30px;", name="register_form")


        h3 Register
        .form-group
          input(id='username_input',ng-pattern="/^[a-zA-Z0-9]*$/",ng-minlength="3",ng-maxlength='20',type="text",class="form-control",placeholder="Username", name='username',ng-model="user.username" username required)/


        .form-group
          div(ng-if="register_form.$pending.usernameExists") checking....
          div(ng-if="register_form.$error.usernameExists") username exists already
          p(class='mini-form' ng-class="register_form.username.$valid === false?'orange':'green'") input valid? =
            code(ng-class="register_form.username.$valid === false?'orange':'green'") {{register_form.username.$valid}}
          p(class='mini-form orange',id='username_string_length')  >= 3 chars & <=20
          p(class='mini-form orange',id='username_char_check') only digits and letters, please



        div(class='form-group reg_form_input')
          input(autocomplete="off",class='email_reg_form', type="email",class="form-control",placeholder="Email address",name="email",ng-model="user.email" required)/

        .form-group
          p(class='mini-form' ng-class="register_form.email.$valid === false?'orange':'green'") input valid? =
            code(ng-class="register_form.email.$valid === false?'orange':'green'") {{register_form.email.$valid}}

        .form-group(class='form-group reg_form_input')
          input(id='password_input', type="password",class="form-control",name="password",placeholder="Password",ng-model="user.password",ng-pattern="/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])/",ng-minlength="6",ng-maxlength='20' password required)/

        .form-group
          p(class='mini-form' ng-class="register_form.password.$valid === false?'orange':'green'") input valid? =
            code(ng-class="register_form.password.$valid === false?'orange':'green'") {{register_form.password.$valid}}
          p(class='mini-form orange',id='password_length_check') passwords must be >= 6 chars & <=20
          p(class='mini-form orange',id='password_uppercase_check') passwords must have at least one uppercase
          p(class='mini-form orange',id='password_lowercase_check') passwords must have at least one lowercase
          p(class='mini-form orange',id='password_number_check') passwords must have at least one number

        .form-group
          div( vc-recaptcha, class='g-recaptcha',theme="'light'", key="model.key",on-create="setWidgetId(widgetId)",on-success="setResponse(response)", on-expire="cbExpiration()", ng-model="myFields.myRecaptchaResponse")

        .form-group
          button(type="submit" class="btn btn-primary",ng-disabled="register_form.$invalid") Register

        //.form-group
          div(ng-model='response') {{response}}

        div(style='height:500px;')













  script(type="text/ng-template" id="/login.html")

    .form-width
      div(ng-show="show_success" class="alert alert-success row")
        span {{ success_message }}

      div(ng-show="show_error" class="alert alert-danger row")
        span {{ error_message }}

      form(name="login_form", ng-submit="logIn()",style="margin-top:30px;")
        h3 Log In

        .form-group
          input(type="text", class="form-control",placeholder="Username",value='test_user',ng-model="user.username",ng-pattern="/^[a-zA-Z0-9]*$/",ng-minlength="3",ng-maxlength='20', required)/


        .form-group
          input(type="password",class="form-control",placeholder="Password",ng-model="user.password",ng-pattern="/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])/",ng-minlength="6",ng-maxlength='20' required)/

        .form-group
          button(type="submit" class="btn btn-primary",ng-disabled="login_form.$invalid") Log In

      .form-group
        button(ng-click="forgotPassword()", class="btn btn-default") forgot passsword?

      .form-group
        button(ng-click="bruteForce()", class="btn btn-danger") test brute force!

